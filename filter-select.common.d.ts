import { GridLayout } from "ui/layouts/grid-layout";
import { FlexboxLayout } from "ui/layouts/flexbox-layout";
import { ObservableArray } from "data/observable-array";
export declare class Common extends GridLayout {
    private _items;
    selected: Array<any>;
    disabled: string;
    private _selected_items;
    private _selected_layout;
    private _primary_key;
    private _gridBase;
    private _search_param;
    private _item_template;
    private _filterd;
    private _term;
    private _lastTerm;
    labelselect: any;
    private currentPage;
    render: string;
    private filterselect;
    private _modal_title;
    private _hint;
    private _selected_flag;
    private multiple;
    static changeEvent: string;
    selected_flag: string;
    search_param: string;
    filterd: ObservableArray<any>;
    term: string;
    item_template: any;
    gridBase: any;
    selected_layout: any;
    private modalPage;
    modal_title: string;
    hint: string;
    private closeCallback;
    selected_items: Array<any>;
    items: any[];
    primary_key: any;
    constructor();
    renderTags(): FlexboxLayout;
    init(): void;
    renderTagsHolder(): GridLayout;
    tagsDone(): void;
    labelDone(): void;
    tagsClear(): void;
    refresh(): void;
    private doneSelect();
    private clearSelect();
    private modal();
    onSubmit(): void;
    private listnToSearch();
    private parseOptions(view, options);
}
